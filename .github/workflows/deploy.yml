name: Deploy using OIDC

on:
  push:
    branches: [ "main" ]

env:
  BUCKET_NAME: "my-oidc-github-bucket-demo-new"
  AWS_REGION: "ap-south-1"

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2

      - name: Configure AWS Credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::938320847138:role/GitHubActionsOIDCRole
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform Init
        run: terraform init --reconfigure

      - name: Terraform validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan
      
      - name: Terraform Apply
        run: terraform apply -auto-approve

      # - name: Set bucket name from Terraform output
      #   id: get_bucket
      #   run: echo "BUCKET_NAME=$(terraform output -raw bucket_name)" >> $GITHUB_ENV

      - name: Sync static site to S3
        run: aws s3 sync ./index.html s3://${{ env.BUCKET_NAME }} --delete --exact-timestamps

      # - name: Print OIDC Token (for debug)
      #   run: |
      #     curl -H "Authorization: bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
      #          "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=sts.amazonaws.com" | jq '.'

      # - name: Upload index.html to S3
      #   run: |
      #     aws s3 cp ./index.html s3://${{ env.BUCKET_NAME }}/

      # - name: List S3 Bucket Contents
      #   run: aws s3 ls s3://${{ env.BUCKET_NAME }}/
